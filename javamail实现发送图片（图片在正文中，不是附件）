public static boolean sendPicEmail(String recipientTO, String subTitle, String htmlContext, String priority, String picPath) {
        // Recipient's email ID needs to be mentioned.
        String to = "Recipient@mail.com,Recipient1@mail.com";//多个用户用","隔开
        
        String cc = "meichaohui@huawei.com";
        
        String bcc = "yangqian25@huawei.com";
        
        // Sender's email ID needs to be mentioned
        String from = "Sender@mail.com";//发件人邮箱
        final String username = "xxx";//用户名
        final String password = "xxx";//密码
        // email host
        String host = "smtp.huawei.com";

        Properties props = new Properties();
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.host", host);
        props.put("mail.smtp.port", "25");

        Session session = Session.getInstance(props,
           new javax.mail.Authenticator() {
              protected PasswordAuthentication getPasswordAuthentication() {
                 return new PasswordAuthentication(username, password);
              }
           });

        try {

           // Create a default MimeMessage object.
           Message message = new MimeMessage(session);

           // Set From: header field of the header.
           message.setFrom(new InternetAddress(from));

           // 主送
           message.setRecipients(Message.RecipientType.TO,
              InternetAddress.parse(to));
           
           //抄送
           message.setRecipients(Message.RecipientType.CC,
                   InternetAddress.parse(cc));
           
           //密送
           message.setRecipients(Message.RecipientType.BCC,
                   InternetAddress.parse(bcc));
           
           // Set Subject: header field 主题
           message.setSubject(subTitle);

           // This mail has 2 part, the BODY and the embedded image
           MimeMultipart multipart = new MimeMultipart("related");//这里是设置嵌入图片，关键部分

           // first part (the html)
           BodyPart messageBodyPart = new MimeBodyPart();
           String htmlText = htmlContext + "<H1>Hello</H1><img src='cid:image'>";//这里的img不能少，否则会下面的图片会成为附件
           messageBodyPart.setContent(htmlText, "text/html");
           // add it
           multipart.addBodyPart(messageBodyPart);

           // second part (the image)
           messageBodyPart = new MimeBodyPart();
           DataSource fds = new FileDataSource(picPath);//这里的path就是本地的一个地址或者说该程序运行环境的一个绝对路径

           messageBodyPart.setDataHandler(new DataHandler(fds));
           messageBodyPart.setHeader("Content-ID", "<image>");

           // add image to the multipart
           multipart.addBodyPart(messageBodyPart);

           // put everything together
           message.setContent(multipart);
           // Send message
           Transport.send(message);

           System.out.println("Sent message successfully....");
           return true;
        } catch (MessagingException e) {
           throw new RuntimeException(e);
        }
     }
--------------更新----------------
使用过程中发现，截图的清晰度降低，截图后的图片经过上面的过程，变得模糊了。
我们使用的是outlook，发现截图ok。但是使用邮件发送出去后就有问题。判断时outlook加载时对图片进行了压缩。
目前没有办法解决这个。只能在邮件里面添加附件（附件是可以的）。
下面是附件部分的参考代码
            Multipart multipart = new MimeMultipart();  //这里没有。因为是附件
            //邮件正文  
            BodyPart contentPart = new MimeBodyPart();  
            contentPart.setContent(mail.getContent(), "text/html;charset=utf-8");  
            multipart.addBodyPart(contentPart);  
            //邮件附件  
            if(attachments != null) {  
                for(File attachment : attachments) {  
                    BodyPart attachmentPart = new MimeBodyPart();  
                    DataSource source = new FileDataSource(attachment);  
                    attachmentPart.setDataHandler(new DataHandler(source));  
                    //避免中文乱码的处理  
                    attachmentPart.setFileName(MimeUtility.encodeWord(attachment.getName()));  
                    multipart.addBodyPart(attachmentPart);  
                }  
            }  
            message.setContent(multipart);  
            //保存邮件  
